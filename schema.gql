# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserType {
  id: String!

  """昵称"""
  name: String!

  """简介"""
  desc: String!

  """tel"""
  tel: String!

  """头像"""
  avatar: String
}

type Page {
  total: Int!
  pageNum: Int!
  pageSize: Int!
}

type Result {
  code: Int!
  message: String!
  data: String
  avatar: String
}

type OSSType {
  """过期时间"""
  expire: String!

  """策略"""
  policy: String!

  """签名"""
  signature: String!

  """key"""
  accessId: String!

  """host"""
  host: String!

  """文件路径"""
  dir: String!
}

type StudentType {
  id: String!
  createdAt: DateTime!
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  deletedAt: DateTime
  deletedBy: String

  """昵称"""
  name: String

  """手机号"""
  tel: String

  """头像"""
  avatar: String

  """账号"""
  account: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type StudentResult {
  code: Int!
  message: String!
  data: StudentType
}

type StudentResults {
  code: Int!
  message: String!
  data: [StudentType!]
  page: Page
}

type OrgImageType {
  id: String
  url: String!
  remark: String
}

type OrganizationType {
  id: String!
  createdAt: DateTime!
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  deletedAt: DateTime
  deletedBy: String

  """营业执照"""
  businessLicense: String!

  """法人身份证正面"""
  identityCardFrontImg: String!

  """法人身份证反面"""
  identityCardBackImg: String!

  """标签 以，隔开"""
  tags: String

  """简介"""
  description: String

  """机构名"""
  name: String

  """logo"""
  logo: String

  """经度"""
  longitude: String

  """纬度"""
  latitude: String

  """地址"""
  address: String

  """电话"""
  tel: String

  """封面图"""
  orgFrontImg: [OrgImageType!]

  """室内图"""
  orgRoomImg: [OrgImageType!]

  """其他图"""
  orgOtherImg: [OrgImageType!]
}

type OrganizationResult {
  code: Int!
  message: String!
  data: OrganizationType
}

type OrganizationResults {
  code: Int!
  message: String!
  data: [OrganizationType!]
  page: Page
}

type Query {
  """使用ID查询用户"""
  Find(id: String!): UserType!

  """使用 ID 获取用户信息"""
  getUserInfo: UserType!

  """更新用户"""
  update(id: String!, params: UserInput!): Boolean!

  """删除用户"""
  del(id: String!): Boolean!

  """获取OSS相关信息"""
  getOSSInfo: OSSType!
  getStudentInfo: StudentResult!
  getStudents(page: PageInput!): StudentResults!
  getOrganizationInfo(id: String!): OrganizationResult!
  getOrganizations(page: PageInput!, name: String): OrganizationResults!
}

input UserInput {
  name: String!
  desc: String!
  avatar: String!
}

input PageInput {
  pageNum: Float!
  pageSize: Float!
}

type Mutation {
  """新增用户"""
  create(param: UserInput!): Boolean!

  """更新用户信息"""
  updateUserInfo(id: String!, params: UserInput!): Result!

  """发送短信验证码"""
  sendSMSCodeMsg(tel: String!): Result!

  """登录"""
  login(tel: String!, code: String!): Result!

  """新增用户"""
  studentRegister(params: CreateStudent!): Boolean!
  commitStudentInfo(params: StudentInput!): StudentResult!
  commitOrganization(params: OrganizationInput!, id: String): OrganizationResult!
  deleteOrganization(id: String!): Result!
}

input CreateStudent {
  name: String!
  password: String!
}

input StudentInput {
  """昵称"""
  name: String!

  """手机号"""
  tel: String!

  """头像"""
  avatar: String!
}

input OrganizationInput {
  """名称"""
  name: String!

  """logo"""
  logo: String!

  """手机号"""
  tel: String

  """tags"""
  tags: String

  """longitude"""
  longitude: String

  """latitude"""
  latitude: String

  """latitude"""
  address: String

  """营业执照"""
  businessLicense: String!

  """description"""
  description: String!

  """法人身份证正面"""
  identityCardFrontImg: String!

  """法人身份证反面"""
  identityCardBackImg: String!

  """机构门面照片"""
  orgFrontImg: [OrgImageInput!]

  """机构环境照片"""
  orgRoomImg: [OrgImageInput!]

  """机构环境照片"""
  orgOtherImg: [OrgImageInput!]
}

input OrgImageInput {
  id: String
  url: String!
  remark: String
}